definitions:
  models.Task:
    properties:
      details:
        type: string
      id:
        type: integer
      title:
        type: string
      user_id:
        type: integer
    type: object
  models.User:
    properties:
      id:
        type: integer
      password:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Kullanıcı adı ve şifre ile giriş yapar
      operationId: LoginHandler
      parameters:
      - description: Kullanıcı
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Kullanıcı girişi
      tags:
      - Auth
  /logout:
    post:
      description: Kullanıcıyı çıkış yaptırır
      operationId: LogoutHandler
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Çıkış
      tags:
      - Auth
  /register:
    post:
      consumes:
      - application/json
      description: Yeni kullanıcı oluşturur
      operationId: RegisterHandler
      parameters:
      - description: Kullanıcı
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Kullanıcı kaydı
      tags:
      - Auth
  /tasks:
    get:
      description: Sadece giriş yapan kullanıcının görevlerini döner
      operationId: TasksListHandler
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Task'
            type: array
      security:
      - BearerAuth: []
      summary: Kullanıcı görevlerini listele
      tags:
      - Tasks
    post:
      consumes:
      - application/json
      description: Yeni görev oluşturur
      operationId: TaskCreateHandler
      parameters:
      - description: Görev
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/models.Task'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Task'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Görev ekle
      tags:
      - Tasks
  /tasks/{id}:
    delete:
      description: Belirli bir görevi siler
      operationId: TaskDeleteHandler
      parameters:
      - description: Görev ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Görev sil
      tags:
      - Tasks
    get:
      description: Belirli bir görevin detayını döner
      operationId: TaskDetailHandler
      parameters:
      - description: Görev ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Task'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Görev detayını görüntüle
      tags:
      - Tasks
    put:
      consumes:
      - application/json
      description: Belirli bir görevi günceller
      operationId: TaskUpdateHandler
      parameters:
      - description: Görev ID
        in: path
        name: id
        required: true
        type: integer
      - description: Görev
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/models.Task'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Task'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Görev güncelle
      tags:
      - Tasks
  /tasks/public:
    get:
      description: Herkesin görebileceği görevleri döner
      operationId: PublicTasksHandler
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Task'
            type: array
      summary: Public görevleri listele
      tags:
      - Tasks
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
